# Requirements:
#   set 'GithubPAT' secure variable in the Azure Pipelines UI

name: $(System.TeamProject)-$(Build.SourceBranchName)-$(Date:yyyyMMdd-HHmm)$(Rev:.r)

trigger:
  branches:
    include:
    - releases/*
  paths:
    exclude:
    - README.md

pr: none
# pr:
#   autoCancel: true
#   branches:
#     include:
#     - master
#     - releases/*
#   paths:
#     exclude:
#     - README.md

variables:
  daemonsRepo: $(Build.Repository.Name)

jobs:

####################### Linux #######################
- job: Linux
  pool:
    name: vmi531340
    vmImage: vmi531340
  steps:
  - checkout: none

  - script: |
      echo Build.BuildId=$(Build.BuildId)
      echo Build.BuildNumber=$(Build.BuildNumber)
      echo Build.BuildUri=$(Build.BuildUri)
    displayName: Echo predefined vars

  - script: |
      sudo apt-get update
      sudo apt-get install -y build-essential cmake pkg-config libboost-all-dev libssl-dev libzmq3-dev libunbound-dev libsodium-dev libunwind8-dev liblzma-dev libreadline6-dev libldns-dev libexpat1-dev doxygen graphviz libpgm-dev qttools5-dev-tools libhidapi-dev libusb-1.0-0-dev libprotobuf-dev protobuf-compiler libudev-dev
    displayName: Install depencendes

  - script: |
      mkdir phiblock && cd phiblock
      git init
      git remote add origin https://user:$(GithubPAT)@github.com/$(daemonsRepo)
      git fetch --depth 1 origin $(Build.SourceBranch)
      git checkout FETCH_HEAD
    displayName: Clone daemons code

  - script: |
      cd phiblock
      make -j$(nproc)
    displayName: Build daemons

  - script: |
      zip -v -j $(Build.ArtifactStagingDirectory)/$(System.TeamProject)-daemons-$(Build.SourceBranchName)-$(TagName)-linux64.zip phiblock/build/Linux/master/release/bin/*
    displayName: Zip daemons

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: linux64
    displayName: Publish artifacts

#############################
- job: CreateGithubRelease
  pool:
    name: vmi531340
    vmImage: vmi531340
  dependsOn:
  - Linux
  condition: |
      succeeded()
  steps:
  - checkout: none

  - task: DownloadBuildArtifacts@0
    displayName: Download artifacts
    inputs:
      downloadType: specific
      itemPattern: '**'
      downloadPath: '$(Build.ArtifactStagingDirectory)'

  - script: |
      set -e
      set -o xtrace
      ls -alh $(Build.ArtifactStagingDirectory)
      [[ `echo $(Build.SourceBranchName) | grep '-'` ]] && preRelease=true || preRelease=false
      curl -H "Authorization: token $(GithubPAT)" \
        -d '{ "tag_name": "v$(TagName)",
            "target_commitish": "$(Build.SourceBranchName)",
            "name": "v$(TagName)",
            "draft": true,
            "prerelease": '$preRelease'}' \
        https://api.github.com/repos/$(daemonsRepo)/releases > resp
      cat resp
      release_id=`cat resp | jq -r '.id'`
      echo release_id=$release_id
      curl \
        -H "Authorization: token $(GithubPAT)" \
        -H "Content-Type: application/zip" -X POST \
        --data-binary "@$(Build.ArtifactStagingDirectory)/linux64/$(System.TeamProject)-daemons-$(Build.SourceBranchName)-$(TagName)-linux64.zip" \
        https://uploads.github.com/repos/$(daemonsRepo)/releases/$release_id/assets?name="$(System.TeamProject)-daemons-$(Build.SourceBranchName)-$(TagName)-linux64.zip"
    displayName: Create github release in daemons repo
